name: Release CI

on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-binggpt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - buid: macos
            os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin
          - build: windows
            os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v3

      - name: "Setup Rust"
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf

      - name: Install rust target
        run: rustup target add ${{ matrix.target }}

      - name: Cargo build
        run: cargo build --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: artifacts-${{ matrix.arch }}-linux
          path: |
            ./target/${{ matrix.target }}/release/binggpt

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: artifacts-${{ matrix.arch }}-macos
          path: |
            ./target/${{ matrix.target }}/release/binggpt

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: artifacts-${{ matrix.arch }}-windows
          path: |
            ./target/${{ matrix.target }}/release/binggpt.exe

  release-binggpt:
    needs: build-binggpt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Query version number
        run: echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Download x86_64 linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64-linux
          path: artifacts/x86_64/linux

      - name: Download x86_64 windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64-windows
          path: artifacts/x86_64/windows

      - name: Download x86_64 macos artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-x86_64-macos
          path: artifacts/x86_64/macos

      - name: Download aarch64 macos artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts-aarch64-macos
          path: artifacts/aarch64/macos

      - name: Rename artifacts
        run: |
          mkdir -p artifacts/release
          mv "artifacts/x86_64/linux/binggpt" "artifacts/release/binggpt_${{ env.version }}_linux_x86_64"
          mv "artifacts/x86_64/windows/binggpt.exe" "artifacts/release/binggpt_${{ env.version }}_windows_x86_64.exe"
          mv "artifacts/x86_64/macos/binggpt" "artifacts/release/binggpt_${{ env.version }}_macos_x86_64"
          mv "artifacts/aarch64/macos/binggpt" "artifacts/release/binggpt_${{ env.version }}_macos_aarch64"

      - name: Create Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          name: v${{ env.version }}
          body: See the assets to download this version and install.
          prerelease: false
          generate_release_notes: false
          files: ./artifacts/release/*
